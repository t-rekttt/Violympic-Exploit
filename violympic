#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (C) 2016-2017 Từ Việt Thảo
# Copyright (C) 2017 Nguyễn Gia Phong
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import print_function
from getpass import getpass
from hashlib import md5
import json
from sys import stdout
from time import sleep

from requests import Session

if hasattr(__builtins__, 'raw_input'): input = raw_input

VIOLYMPIC_LOGIN = 'http://violympic.vn/Login.aspx'
VIOLYMPIC_ROUND = 'http://violympic.vn/Round.aspx'
VIOLYMPIC_PLAY = 'http://violympic.vn/Play.aspx?ran={}'
VIOLYMPIC_URLDATA = 'http://violympic.vn/urlData.aspx/getdata'
VIOLYMPIC_TIMER = 'http://violympic.vn/Timer.aspx?start=1&which_exam={}'
VIOLYMPIC_SUBMIT = 'http://violympic.vn/SubmitTotalPoint.aspx/SendtotalPoint'

HEADERS_LOGIN = {'Content-Type': 'application/x-www-form-urlencoded'}
HEADERS_JSON = {'Content-Type': 'application/json'}
JSON_URLDATA = '{{"ran": "{}", "local": 0}}'

TOTAL_POINT = 100
SUB_POINT = '20,20,20,20,20'
TOKEN_CLINET = 'ksjhjsf0.8059151084418859'
TOKEN_BASE = '{{}}","{{}}","{}","{}","{{}}'.format(TOTAL_POINT, SUB_POINT)


def findBetween(s, name):
    """Return the first substring of s between
    '{}.aspx?ran='.format(name) and "'".
    """
    try:
        start = s.index('{}.aspx?ran='.format(name)) + len(name) + 10
        end = s.index("'", start)
    except ValueError:
        return ''
    else:
        return s[start:end]


def login(session, username=None, password=None):
    """Try to login to Violympic.
    
    If username or password is not given, propmt for user input.

    Return a tuple containing the login-able username and password.
    """
    if username is None or password is None:
        username = input('\nDang nhap\nTen dang nhap: ')
        password = getpass('Mat khau: ')
    session.headers = HEADERS_LOGIN
    loginData = {'login_username': username, 'login_password': password}
    loginHeaders = session.post(VIOLYMPIC_LOGIN, data=loginData).headers
    if 'Set-Cookie' in loginHeaders:
        session.headers = HEADERS_JSON
        return username, password
    else:
        return login(session)


def passExam(session, userId, exam, ran, signature):
    """Try to pass the current exam."""
    print('Bai thi {}'.format(exam))
    try:
        delay = int(input('Nhap thoi gian lam bai (mac dinh 60 giay): '))
    except ValueError:
        delay = 60
    session.get(VIOLYMPIC_TIMER.format(exam))
    for _ in range(delay):
        stdout.write('#')
        sleep(1)
        stdout.flush()
    token = '0.cnx' + '0.j2t'.join(TOKEN_BASE.format(userId, exam, ran)[::-1])
    postData = {'local': 0, 'userId': userId, 'which_exam': exam,
                'Token': token, 'totalPoint': TOTAL_POINT,
                'subPoint': SUB_POINT, 'ran': ran, 'signature': signature,
                'token_clinet': TOKEN_CLINET, 'timeStop': '600'}
    session.post(VIOLYMPIC_SUBMIT, data=json.dumps(postData))
    print('\nHoan thanh bai thi voi so diem:', TOTAL_POINT)


if __name__ == '__main__':
    print('Violympic-Exploit by T-Rekt of J2TeaM')
    print('This snippet is for EDUCATIONAL PURPOSE ONLY.')
    print('Please DO NOT ABUSE, otherwise you may get banned!')
    session = Session()
    username, password = login(session)
    while True:
        roundUrl = VIOLYMPIC_PLAY.format(
            findBetween(session.get(VIOLYMPIC_ROUND).text, 'Play'))
        data = session.post(VIOLYMPIC_URLDATA, data=JSON_URLDATA.format(
            findBetween(session.get(roundUrl).text, 'Exam')))
        try:
            d = json.loads(json.loads(data.text)['d'])
        except TypeError:
            print('\nChuc mung ban da vuot qua vong thi!')
            print('Moi ban truy cap vao dia chi sau de xem ket qua:')
            print(roundUrl)
            input('Nhan Enter sau khi da chon Thi lai hoac Nop bai. ')
            login(session, username, password)
        else:
            print('\nVong {}'.format(d['which_round']))
            passExam(session, d['userId'], d['which_exam'], d['ran'],
                     md5((d['signature'] + TOKEN_CLINET).encode()).hexdigest())
